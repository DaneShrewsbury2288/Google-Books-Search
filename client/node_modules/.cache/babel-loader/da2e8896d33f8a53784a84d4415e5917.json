{"ast":null,"code":"var _jsxFileName = \"c:\\\\Users\\\\dshre\\\\Google-Books-Search\\\\client\\\\src\\\\pages\\\\SearchBooks.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport { Container } from \"../components/Grid\";\nimport \"./style.css\";\nimport Header from \"../components/Header\";\nimport SearchMenu from \"../components/SearchMenu\";\nimport Results from \"../components/Results\";\n\nclass SearchBooks extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      search: \"\",\n      books: [],\n      error: \"\",\n      message: \"\"\n    };\n\n    this.handleInputChange = event => {\n      this.setState({\n        search: event.target.value\n      });\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault(); // once it clicks it connects to the google book api with the search value\n\n      API.getGoogleSearchBooks(this.state.search).then(res => {\n        let results = res.data.items; //map through the array \n\n        results = results.map(result => {\n          //store each book information in a new object \n          result = {\n            key: result.id,\n            id: result.id,\n            title: result.volumeInfo.title,\n            author: result.volumeInfo.authors,\n            description: result.volumeInfo.description,\n            image: result.volumeInfo.imageLinks.thumbnail,\n            link: result.volumeInfo.infoLink\n          };\n          return result;\n        }); // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\n\n        this.setState({\n          books: results,\n          error: \"\"\n        });\n      }).catch(err => this.setState({\n        error: err.items\n      }));\n    };\n\n    this.handleSavedButton = event => {\n      event.preventDefault();\n      console.log(this.state.books);\n      let savedBooks = this.state.books.filter(book => book.id === event.target.id);\n      console.log(savedBooks);\n      API.saveBook(savedBooks).then(this.setState({\n        message: alert(\"Your book is saved\")\n      })).catch(err => console.log(err));\n    };\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 66\n      },\n      __self: this\n    }), React.createElement(SearchMenu, {\n      handleFormSubmit: this.handleFormSubmit,\n      handleInputChange: this.handleInputChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }), React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    }, React.createElement(Results, {\n      books: this.state.books,\n      handleSavedButton: this.handleSavedButton,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default SearchBooks;","map":{"version":3,"sources":["c:\\Users\\dshre\\Google-Books-Search\\client\\src\\pages\\SearchBooks.js"],"names":["React","Component","API","Container","Header","SearchMenu","Results","SearchBooks","state","search","books","error","message","handleInputChange","event","setState","target","value","handleFormSubmit","preventDefault","getGoogleSearchBooks","then","res","results","data","items","map","result","key","id","title","volumeInfo","author","authors","description","image","imageLinks","thumbnail","link","infoLink","catch","err","handleSavedButton","console","log","savedBooks","filter","book","saveBook","alert","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { Container } from \"../components/Grid\"\r\nimport \"./style.css\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport SearchMenu from \"../components/SearchMenu\";\r\nimport Results from \"../components/Results\";\r\n\r\n\r\nclass SearchBooks extends Component {\r\n    state = {\r\n        search: \"\",\r\n        books: [],\r\n        error: \"\",\r\n        message: \"\"\r\n    };\r\n\r\n\r\n    //function to take value of what enter in the search bar\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value })\r\n    }\r\n\r\n    //function to control the submit button of the search form \r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        // once it clicks it connects to the google book api with the search value\r\n        API.getGoogleSearchBooks(this.state.search)\r\n            .then(res => {\r\n                let results = res.data.items\r\n                //map through the array \r\n                results = results.map(result => {\r\n                    //store each book information in a new object \r\n                    result = {\r\n                        key: result.id,\r\n                        id: result.id,\r\n                        title: result.volumeInfo.title,\r\n                        author: result.volumeInfo.authors,\r\n                        description: result.volumeInfo.description,\r\n                        image: result.volumeInfo.imageLinks.thumbnail,\r\n                        link: result.volumeInfo.infoLink\r\n                    }\r\n                    return result;\r\n                })\r\n                // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\r\n                this.setState({ books: results, error: \"\" })\r\n\r\n            })\r\n            .catch(err => this.setState({ error: err.items }));\r\n    };\r\n\r\n    handleSavedButton = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.books)\r\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\r\n        console.log(savedBooks)\r\n        API.saveBook(savedBooks)\r\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <SearchMenu\r\n                    handleFormSubmit={this.handleFormSubmit}\r\n                    handleInputChange={this.handleInputChange}\r\n                />\r\n               <Container fluid>\r\n                <Results \r\n                    books={this.state.books}\r\n                    handleSavedButton={this.handleSavedButton}\r\n                />\r\n               </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBooks;"]},"metadata":{},"sourceType":"module"}