{"version":3,"sources":["components/NoMatchTwo/404.png","components/Navbar/index.js","components/Footer/index.js","utils/API.js","components/Header/index.js","components/Grid/index.js","components/SavedResults/index.js","pages/SaveBooks.js","components/SearchMenu/index.js","components/Results/index.js","pages/SearchBooks.js","components/NoMatchTwo/index.js","pages/NoMatch.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Navbar","className","href","Footer","getGoogleSearchBooks","query","axios","get","getBooks","getBook","id","deleteBook","delete","saveBook","savedBooks","post","Header","Container","fluid","children","Row","Col","size","split","map","join","SavedResults","props","length","savedbook","title","key","src","image","alt","author","description","_id","onClick","event","handleDeleteButton","link","SaveBooks","state","API","then","res","componentDidMount","catch","err","console","log","setState","data","this","Component","SearchMenu","type","value","search","onChange","handleInputChange","placeholder","handleFormSubmit","Results","books","book","handleSavedButton","SearchBooks","error","message","target","preventDefault","results","items","result","volumeInfo","authors","imageLinks","thumbnail","infoLink","filter","alert","NoMatchTwo","Vader","NoMatch","App","exact","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ee241d19.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/404.3cec8468.png\";","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Navbar() {\r\n    return (\r\n        <nav className=\"navbar navbar-default navbar-fixed-top\">\r\n            <ul>\r\n                <li> Google Books  </li>\r\n                <li>\r\n                    <a className=\"searchNavBar\" href=\"/\"> Search </a>\r\n                </li>\r\n                <li>\r\n                   <a className=\"savedNavBar\" href=\"/saved\"> Saved </a>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    );\r\n\r\n}\r\n\r\n\r\nexport default Navbar;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Footer() {\r\n    return (\r\n        <footer className = \"page-footer\">\r\n\t\t<div className = \"container-fluid text-center\">\r\n\t\t\t<p className=\"footerWord\"> App by Dane Shrewsbury </p>\r\n\t\t</div>\t\r\n\t</footer>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Footer;","import axios from \"axios\";\r\n\r\nexport default {\r\n\r\n  // Get book from google search \r\n  getGoogleSearchBooks: function (query) {\r\n    return axios.get(\"https://www.googleapis.com/books/v1/volumes?q=\" + query)\r\n  },\r\n\r\n  // Gets all books\r\n  getBooks: function () {\r\n    return axios.get(\"/api/books\");\r\n  },\r\n  // Gets the book with the given id\r\n  getBook: function (id) {\r\n    return axios.get(\"/api/books/\" + id);\r\n  },\r\n  // Deletes the book with the given id\r\n  deleteBook: function (id) {\r\n    return axios.delete(\"/api/books/\" + id);\r\n  },\r\n  // Saves a book to the database\r\n  saveBook: function (savedBooks) {\r\n    return axios.post(\"/api/books\", savedBooks);\r\n  }\r\n};\r\n","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <div className=\"headerMain\">\r\n                <h1 className=\"headerh1\"> (React) Google Books Search </h1>\r\n                <h2 className=\"headerh2\"> Search for and save books of interest! </h2>\r\n            </div>\r\n        </header>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default Header;","import React from \"react\";\r\n\r\n// Exporting the Container, Row, and Col components from this file\r\n\r\n// This Container component allows us to use a bootstrap container without worrying about class names\r\nexport function Container({ fluid, children }) {\r\n  return <div className={`container${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Row component lets us use a bootstrap row without having to think about class names\r\nexport function Row({ fluid, children }) {\r\n  return <div className={`row${fluid ? \"-fluid\" : \"\"}`}>{children}</div>;\r\n}\r\n\r\n// This Col component lets us size bootstrap columns with less syntax\r\n// e.g. <Col size=\"md-12\"> instead of <div className=\"col-md-12\">\r\nexport function Col({ size, children }) {\r\n  return (\r\n    <div\r\n      className={size\r\n        .split(\" \")\r\n        .map(size => \"col-\" + size)\r\n        .join(\" \")}\r\n    >\r\n      {children}\r\n    </div>\r\n  );\r\n}","import React from \"react\";\r\nimport \"./style.css\";\r\nimport { Row, Col } from \"../Grid\"\r\n\r\nfunction SavedResults(props) {\r\n    return (props.savedBooks.length === 0) ? (\r\n        <div className=\"ResultsMenu\">\r\n            <div className=\"ResultsWrapper\">\r\n                <h3 className=\"ResultsH1\"> Books you saved: </h3>\r\n                <div className=\"ResultsDiv\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n            <div className=\"ResultsMenu\">\r\n                <div className=\"ResultsWrapper\">\r\n                  <div className=\"ResultsDiv\">\r\n                    <h3 className=\"ResultsH1\"> Books you saved: </h3>\r\n                    {props.savedBooks.map(savedbook => {\r\n                        return (\r\n                        <li className=\"search-list list-group-item\">\r\n                            <Row className=\"SearchResult row\" id={savedbook.title + \"Card\"} key={savedbook.id}>\r\n                                <Col size=\"2\" className=\"bookImage\">\r\n                                    <img src={savedbook.image} alt={savedbook.title} />\r\n                                </Col>\r\n                                <Col size=\"1\" className=\"emptyCol\" />\r\n                                <Col size=\"9\" className=\"bookInfo\">\r\n                                    <Row>\r\n                                        <h3 className=\"bookTitle\">{savedbook.title}</h3>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <h4 className=\"bookAuthor\">{savedbook.author}</h4>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <p className=\"bookDescription\">{savedbook.description}</p>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                            <br></br>\r\n                            <Row className=\"buttonDiv \">\r\n                                <button className=\"saveBook btn btn-primary\" id={savedbook._id} onClick={(event) => props.handleDeleteButton(event)}>\r\n                                    Delete Book\r\n                                        </button>\r\n                                <a href={savedbook.link}>\r\n                                    <button className=\"viewBook btn btn-success\">\r\n                                        View Book\r\n                                        </button>\r\n                                </a>\r\n                            </Row>\r\n                        </li>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SavedResults;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport { Container } from \"../components/Grid\";\r\nimport SavedResults from \"../components/SavedResults\";\r\n\r\n\r\nclass SaveBooks extends Component {\r\n    state = {\r\n        savedBooks: []\r\n    };\r\n\r\n\r\n    componentDidMount() {\r\n        API.getBooks()\r\n            .then(res => this.setState({ savedBooks: res.data }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    //function to remove book by id\r\n    handleDeleteButton = id => {\r\n        API.deleteBook(id)\r\n            .then(res => this.componentDidMount())\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <Container fluid>\r\n                    <SavedResults \r\n                    savedBooks={this.state.savedBooks} \r\n                    handleDeleteButton={this.handleDeleteButton} \r\n                    />\r\n                </Container>\r\n\r\n\r\n            </div>\r\n\r\n\r\n\r\n        )\r\n    }\r\n\r\n\r\n\r\n}\r\n\r\nexport default SaveBooks;","import React from \"react\";\r\nimport \"./style.css\";\r\n\r\nfunction SearchMenu(props) {\r\n    return (\r\n        <div className=\"SearchMenu\">\r\n            <div className=\"SearchMenuWrapper\">\r\n                <h1 className=\"searchMenuH1\"> Book Search </h1>\r\n                <div>\r\n                    <input \r\n                    type=\"text\" \r\n                    value={props.search}\r\n                    className=\"input\" \r\n                    onChange={props.handleInputChange} \r\n                    placeholder=\"Enter Book Name...\" \r\n                    />\r\n                </div>\r\n                <button className=\"SearchButton\" onClick={props.handleFormSubmit}> Search </button>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\nexport default SearchMenu;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport { Row, Col } from \"../Grid\"\r\n\r\nfunction Results(props) {\r\n    return (props.books.length === 0) ? (\r\n\r\n        <div className=\"ResultsMenu\">\r\n            <div className=\"ResultsWrapper\">\r\n                <h3 className=\"ResultsH1\"> Results: </h3>\r\n                <div className=\"ResultsDiv\">\r\n                </div>\r\n            </div>\r\n        </div>\r\n    ) : (\r\n            <div className=\"ResultsMenu\">\r\n                <div className=\"ResultsWrapper\">\r\n                  <div className=\"ResultsDiv\">\r\n                    <h3 className=\"ResultsH1\"> Results: </h3>\r\n                    {props.books.map(book => {\r\n                        return (\r\n                        <li className=\"search-list list-group-item\">\r\n                            <Row className=\"SearchResult row\" id={book.id} key={book.id}>\r\n                                <Col size=\"2\" className=\"bookImage\">\r\n                                    <img src={book.image} alt={book.title} />\r\n                                </Col>\r\n                                <Col size=\"1\" className=\"emptyCol\" />\r\n                                <Col size=\"9\" className=\"bookInfo\">\r\n                                    <Row>\r\n                                        <h3 className=\"bookTitle\">{book.title}</h3>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <h4 className=\"bookAuthor\">{book.author}</h4>\r\n                                    </Row>\r\n                                    <Row>\r\n                                        <p className=\"bookDescription\">{book.description}</p>\r\n                                    </Row>\r\n                                </Col>\r\n                            </Row>\r\n                            <br></br>\r\n                            <Row className=\"buttonDiv \">\r\n                                <button className=\"saveBook btn btn-primary\" id={book.id} onClick={(event) => props.handleSavedButton(event)}>\r\n                                    Save Book\r\n                                        </button>\r\n                                <a href={book.link}>\r\n                                    <button className=\"viewBook btn btn-success\">\r\n                                        View Book\r\n                                        </button>\r\n                                </a>\r\n                            </Row>\r\n                        </li>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Results;","import React, { Component } from \"react\";\r\nimport API from \"../utils/API\";\r\nimport { Container } from \"../components/Grid\"\r\nimport \"./style.css\";\r\n\r\nimport Header from \"../components/Header\";\r\nimport SearchMenu from \"../components/SearchMenu\";\r\nimport Results from \"../components/Results\";\r\n\r\n\r\nclass SearchBooks extends Component {\r\n    state = {\r\n        search: \"\",\r\n        books: [],\r\n        error: \"\",\r\n        message: \"\"\r\n    };\r\n\r\n\r\n    //function to take value of what enter in the search bar\r\n    handleInputChange = event => {\r\n        this.setState({ search: event.target.value })\r\n    }\r\n\r\n    //function to control the submit button of the search form \r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        // once it clicks it connects to the google book api with the search value\r\n        API.getGoogleSearchBooks(this.state.search)\r\n            .then(res => {\r\n                let results = res.data.items\r\n                //map through the array \r\n                results = results.map(result => {\r\n                    //store each book information in a new object \r\n                    result = {\r\n                        key: result.id,\r\n                        id: result.id,\r\n                        title: result.volumeInfo.title,\r\n                        author: result.volumeInfo.authors,\r\n                        description: result.volumeInfo.description,\r\n                        image: result.volumeInfo.imageLinks.thumbnail,\r\n                        link: result.volumeInfo.infoLink\r\n                    }\r\n                    return result;\r\n                })\r\n                // reset the sate of the empty books array to the new arrays of objects with properties geting back from the response\r\n                this.setState({ books: results, error: \"\" })\r\n\r\n            })\r\n            .catch(err => this.setState({ error: err.items }));\r\n    };\r\n\r\n    handleSavedButton = event => {\r\n        event.preventDefault();\r\n        console.log(this.state.books)\r\n        let savedBooks = this.state.books.filter(book => book.id === event.target.id)\r\n        savedBooks = savedBooks[0];\r\n        console.log(savedBooks)\r\n        console.log(savedBooks.author)\r\n        API.saveBook(savedBooks)\r\n            .then(this.setState({ message: alert(\"Your book is saved\") }))\r\n            .catch(err => console.log(err))\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Header />\r\n                <SearchMenu\r\n                    handleFormSubmit={this.handleFormSubmit}\r\n                    handleInputChange={this.handleInputChange}\r\n                />\r\n               <Container fluid>\r\n                <Results \r\n                    books={this.state.books}\r\n                    handleSavedButton={this.handleSavedButton}\r\n                />\r\n               </Container>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default SearchBooks;","import React from \"react\";\r\nimport \"./style.css\";\r\nimport Vader from \"./404.png\"\r\n\r\nfunction NoMatchTwo() {\r\n    return (\r\n        <div>\r\n            <div className=\"jumbotron jumbotron-fluid\">\r\n                <div className=\"containerNoMatch\">\r\n                    <div className=\"image\">\r\n                        <img alt=\"vader404\" src={Vader}>\r\n\r\n                        </img>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>\r\n\r\n        </div>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default NoMatchTwo;","import React from \"react\";\r\nimport Navbar from \"../components/Navbar\";\r\nimport NoMatchTwo from \"../components/NoMatchTwo\";\r\n\r\n\r\n\r\nfunction NoMatch() {\r\n    return (\r\n        <div>\r\n        <Navbar />\r\n        <NoMatchTwo />\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default NoMatch;","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Navbar from \"./components/Navbar\";\nimport Footer from \"./components/Footer\";\n\nimport SaveBooks from \"./pages/SaveBooks\";\nimport SearchBooks from \"./pages/SearchBooks\";\nimport NoMatch from \"./pages/NoMatch\";\n\n\nfunction App() {\n  return (\n    <Router>\n      <div className=\"App\">\n        <Navbar />\n        <Switch >\n          <Route exact path=\"/\" component={SearchBooks} />\n          <Route exact path=\"/saved\" component={SaveBooks} />\n          <Route exact path=\"/saved/:id\" component={SaveBooks} />\n          <Route component={NoMatch} />\n        </Switch>\n        <Footer />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}